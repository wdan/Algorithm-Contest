import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class MountainsEasy
{
    public boolean[][] map;
    public boolean[][] used;
    public int lenW,lenH;
    public int countPlacements(String[] picture, int N)
    {
        lenH =  picture.length;
        lenW =  picture[0].length();
        map = new boolean[lenW][lenH];
        used = new boolean[lenW][lenH];
        int count2=0;
        for (int i=0;i<lenW;i++)
            for (int j=0;j<lenH;j++){
                used[i][j] = false;
                if (picture[lenH-j-1].charAt(i)=='.') map[i][j] = false;
                else {map[i][j] = true; count2++;}
            }
        int count=0;
        for (int j=lenH-1;j>=0;j--)
            for(int i=0;i<lenW;i++){
                if((map[i][j])&&(!used[i][j])){
                    floodfill(i,j);
                    count++;
                }
            }
        int ans =1;
        for (int i=1;i<=count;i++) ans=ans*i%1000000009;
        if (count==N){
            return ans;
        } else{
            int[][] dp=new int[51][51];
            dp[0][0] = 1;
            for(int i=0;i<N;i++)
                for(int j=0;j<=count;j++){
                    if (j<count)
                        dp[i+1][j+1]=(int)((dp[i+1][j+1]+(long)dp[i][j]*(count-j))%1000000009);
                    dp[i+1][j]=(int)((dp[i+1][j]+dp[i][j]*(long)(count2-count+j))%1000000009);
                }
            return dp[N][count];
        }
    }
    public void floodfill(int x,int y){
        int now = 0;
        for (int j=y;j>=0;j--){
            for (int i=x-now;i<=x+now;i++){
                if ((i<0)||(i>lenW-1)) continue;
                used[i][j] = true;
            }
            now++;
        }
    }
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, int p1, boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}" + "," + p1);
		System.out.println("]");
		MountainsEasy obj;
		int answer;
		obj = new MountainsEasy();
		long startTime = System.currentTimeMillis();
		answer = obj.countPlacements(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		int p2;
		
		// ----- test 0 -----
		p0 = new String[]{"X.","XX"};
		p1 = 1;
		p2 = 1;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"X.","XX"};
		p1 = 2;
		p2 = 5;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"X.X","XXX"};
		p1 = 2;
		p2 = 2;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"X.X","XXX"};
		p1 = 3;
		p2 = 24;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"......","X..X..","XXXXXX","XXXXXX"};
		p1 = 3;
		p2 = 6;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new String[]{"......","X..X..","XXXXXX","XXXXXX"};
		p1 = 4;
		p2 = 300;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 6 -----
		p0 = new String[]{"....X...X..","...XXX.XXX.","XXXXXXXXXXX"};
		p1 = 10;
		p2 = 764632413;
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
